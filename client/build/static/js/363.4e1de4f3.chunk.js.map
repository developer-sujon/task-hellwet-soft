{"version":3,"file":"static/js/363.4e1de4f3.chunk.js","mappings":"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","sources":["components/languageDropdown/index.js","layout/Navigation.jsx","layout/NavItem.jsx","layout/SideBar.jsx","layout/Layout.jsx"],"sourcesContent":["// Internal Lib Import\nimport React, { useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport i18next from 'i18next';\n\nimport enFlag from './flags/us.jpg';\nimport bnFlag from './flags/bangladesh.png';\nimport germanyFlag from './flags/germany.jpg';\nimport italyFlag from './flags/italy.jpg';\nimport spainFlag from './flags/spain.jpg';\nimport russiaFlag from './flags/russia.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeLanguage } from '../../redux/slice/settingReducer';\n\n// Get the languages\nconst Languages = [\n  {\n    display: 'Bangla',\n    name: 'bn',\n    flag: bnFlag,\n  },\n  {\n    display: 'English',\n    name: 'en',\n    flag: enFlag,\n  },\n];\n\nconst LanguageDropdown = (): React$Element<any> => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const state = useSelector((state) => state.settingReducer);\n\n  let Language = Languages.find((item) => item.name === state.language);\n\n  Language = Language || {\n    display: 'English',\n    name: 'en',\n    flag: enFlag,\n  };\n\n  const dispatch = useDispatch();\n\n  const toggleDropdown = ({ dropdownOpen: boolean }) => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const handleLanguage = (index) => {\n    i18next.changeLanguage(Languages[index].name);\n    dispatch(changeLanguage(Languages[index].name));\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        variant=\"link\"\n        id=\"dropdown-languages\"\n        onClick={toggleDropdown}\n        className=\"nav-link dropdown-toggle arrow-none\"\n      >\n        <img src={Language.flag} alt={Language.name} className=\"me-0 me-sm-1\" height=\"12\" />\n        <span className=\"align-middle d-none d-sm-inline-block\">{Language.display}</span>\n        <i className=\"mdi mdi-chevron-down d-none d-sm-inline-block align-middle\"></i>\n      </Dropdown.Toggle>\n      <Dropdown.Menu align={'end'} className=\"dropdown-menu-animated topbar-dropdown-menu\">\n        <div onClick={toggleDropdown}>\n          {Languages.map((lang, i) => {\n            return (\n              <span\n                className=\"dropdown-item notify-item\"\n                key={i + '-lang'}\n                onClick={() => handleLanguage(i)}\n                style={{ cursor: 'pointer' }}\n              >\n                <img src={lang.flag} alt={lang.name} className=\"me-1\" height=\"12\" />\n                <span className=\"align-middle\">{lang.display}</span>\n              </span>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default LanguageDropdown;\n","//External Lib Import\nimport { useEffect, useState } from 'react';\nimport { Container, Navbar } from 'react-bootstrap';\nimport { AiOutlineLogout, AiOutlineMenuUnfold, AiOutlineUser } from 'react-icons/ai';\nimport { BsArrowsFullscreen } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\n//Internal Lib Import\nimport Logo from '../assets/images/logo.png';\nimport { useProfileDetailsQuery } from '../redux/services/profileService';\nimport defaultUserAvatar from '../assets/images/user.png';\nimport { setLogout } from '../redux/slice/authReducer';\nimport { useTranslation } from 'react-i18next';\nimport LanguageDropdown from '../components/languageDropdown';\n\nconst Navigation = ({ openMenu, setOpenMenu, title = 'Home' }) => {\n  const { t } = useTranslation();\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [openDropdown, setOpenDropdown] = useState(false);\n  const { accessToken } = useSelector((state) => state.authReducer);\n  const dispatch = useDispatch();\n\n  const FullScreen = () => {\n    if (isFullScreen === true) {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n      setIsFullScreen(false);\n    } else {\n      let elem = document.documentElement;\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      }\n      setIsFullScreen(true);\n    }\n  };\n\n  const { data: profileDetails } = useProfileDetailsQuery();\n\n  return (\n    <>\n      <title>{title}</title>\n      <Navbar className=\"fixed-top px-0 shadow-sm \">\n        <Container fluid={true}>\n          <Navbar.Brand>\n            <button className=\"icon-nav m-0 h5 btn btn-link\" onClick={() => setOpenMenu(!openMenu)}>\n              <AiOutlineMenuUnfold />\n            </button>\n            <Link to=\"/\">\n              <img className=\"nav-logo mx-2\" src={Logo} alt=\"logo\" />\n            </Link>\n          </Navbar.Brand>\n\n          <div className=\"float-right h-auto d-flex\">\n            <div>\n              <LanguageDropdown />\n            </div>\n            <button className=\"mx-2 icon-nav h6 px-3 btn btn-link\" onClick={FullScreen}>\n              <BsArrowsFullscreen />\n            </button>\n\n            {accessToken && profileDetails && (\n              <div className=\"user-dropdown\">\n                <img\n                  className=\"icon-nav-img icon-nav\"\n                  src={profileDetails?.photo || defaultUserAvatar}\n                  alt={profileDetails?.email}\n                  onClick={() => setOpenDropdown(!openDropdown)}\n                />\n                <div className={openDropdown ? 'user-dropdown-content d-block' : 'user-dropdown-content'}>\n                  <div className=\"mt-4 text-center\">\n                    <img\n                      className=\"icon-nav-img\"\n                      src={profileDetails?.photo || defaultUserAvatar}\n                      alt={profileDetails?.email}\n                    />\n                    <h6>{profileDetails?.name}</h6>\n                    <hr className=\"user-dropdown-divider  p-0\" />\n                  </div>\n                  {/* <NavLink to=\"/profile\" className={({ isActive }) => (isActive ? 'link-item-active' : 'link-item')}>\n                    <AiOutlineUser className=\"link-item-icon\" />\n                    <span className=\"link-item-caption\">{t('profile')}</span>\n                  </NavLink> */}{' '}\n                  <span onClick={() => dispatch(setLogout())} className=\"link-item\" style={{ cursor: 'pointer' }}>\n                    <AiOutlineLogout className=\"link-item-icon\" />\n                    <span className=\"link-item-caption\">{t('logout')}</span>\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Navigation;\n","//internal lib import\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavItem = ({ title, link, Icon }) => {\r\n  return (\r\n    <Nav.Item>\r\n      <NavLink\r\n        to={link}\r\n        className={({ isActive }) =>\r\n          isActive ? \"side-bar-item-active mt-2\" : \"side-bar-item mt-2\"\r\n        }\r\n      >\r\n        <Icon className=\"side-bar-item-icon\" />\r\n        <span className=\"side-bar-item-caption\">{title}</span>\r\n      </NavLink>\r\n    </Nav.Item>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","//External Lib  imports\nimport React from 'react';\nimport { RiDashboardLine } from 'react-icons/ri';\nimport { Nav } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { BiSupport } from 'react-icons/bi';\n\n//Internal Lib  imports\nimport NavItem from './NavItem';\n\nconst SideBar = ({ openMenu, setOpenMenu }) => {\n  const { t } = useTranslation();\n  return (\n    <div className={openMenu ? 'side-nav-open' : 'side-nav-close'}>\n      <Nav className=\"flex-column pt-2\">\n        <NavItem title={t('dashboard')} link=\"/dashboard\" Icon={RiDashboardLine} />\n        <NavItem title={t('task')} link=\"/task\" Icon={BiSupport} />\n      </Nav>\n    </div>\n  );\n};\n\nexport default SideBar;\n","//External Lib Import\r\nimport React, { useState } from \"react\";\r\n\r\n//Internal Lib Import\r\nimport Navigation from \"./Navigation\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst Layout = ({ children, title }) => {\r\n  const [openMenu, setOpenMenu] = useState(true);\r\n  return (\r\n    <>\r\n      <Navigation openMenu={openMenu} setOpenMenu={setOpenMenu} title={title} />\r\n      <SideBar openMenu={openMenu} setOpenMenu={setOpenMenu} />\r\n      <div className={openMenu ? \"content\" : \"content-expand\"}>{children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["Languages","display","name","flag","enFlag","_useState","useState","_useState2","_slicedToArray","dropdownOpen","setDropdownOpen","state","useSelector","settingReducer","Language","find","item","language","dispatch","useDispatch","toggleDropdown","_ref","_jsxs","Dropdown","show","onToggle","children","variant","id","onClick","className","_jsx","src","alt","height","align","map","lang","i","index","i18next","changeLanguage","style","cursor","openMenu","setOpenMenu","_ref$title","title","t","useTranslation","isFullScreen","setIsFullScreen","_useState3","_useState4","openDropdown","setOpenDropdown","accessToken","authReducer","profileDetails","useProfileDetailsQuery","data","_Fragment","Navbar","Container","fluid","AiOutlineMenuUnfold","Link","to","Logo","LanguageDropdown","document","exitFullscreen","webkitExitFullscreen","msExitFullscreen","elem","documentElement","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","BsArrowsFullscreen","photo","defaultUserAvatar","email","setLogout","AiOutlineLogout","link","Icon","Nav","NavLink","_ref2","isActive","NavItem","RiDashboardLine","BiSupport","Navigation","SideBar"],"sourceRoot":""}